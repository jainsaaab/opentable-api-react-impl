{"version":3,"sources":["img/logo.png","img/spinner.gif","components/ui/Header.js","components/restaurants/RestaurantItem.js","components/ui/Spinner.js","components/restaurants/RestaurantGrid.js","components/ui/Search.js","components/ui/Filter.js","components/ui/PagesBar.js","App.js","index.js"],"names":["module","exports","header","className","src","logo","alt","restaurantItem","props","item","name","address","city","area","phone","n","p","i","getPrice","price","href","reserve_url","Spinner","spinner","style","width","margin","display","restaurantGrid","isLoading","items","map","RestaurantItem","key","id","Search","useState","text","setText","type","placeholder","value","onChange","e","q","target","getQuery","autoFocus","Filter","t","getFilterText","toLowerCase","PagesBar","divs","curPage","push","onClick","clicked","totalPages","tmp","innerHTML","App","restaurants","data","setData","filteredData","setFilteredData","setIsLoading","query","setQuery","filterText","setFilterText","pageNo","setPageNo","useEffect","a","axios","result","fetchItems","r","indexOf","Header","RestaurantGrid","Number","Math","ceil","total_entries","per_page","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e7e1787.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.76ea3212.png\";","module.exports = __webpack_public_path__ + \"static/media/spinner.235b9b3e.gif\";","import React from 'react';\nimport logo from '../../img/logo.png';\n\nconst header = () => (\n    <header className='center'>\n        <img src={logo} alt='opentable logo' />\n    </header>\n)\n\nexport default header;","import React from 'react';\n\nconst restaurantItem = (props) => {\n  const getPrice = (n) => {\n    let p = \"\";\n    for(let i=0; i<n; i++) {\n      p += \"$\";\n    }\n\n    return p;\n  }\n\n  return (\n    <div className='card'>\n          <h1>{props.item.name}</h1>\n          <ul>\n            <li>\n              <strong>Address:</strong> {props.item.address}\n            </li>\n            <li>\n              <strong>City:</strong> {props.item.city}\n            </li>\n            <li>\n              <strong>Area:</strong> {props.item.area}\n            </li>\n            <li>\n              <strong>Phone:</strong> {props.item.phone}\n            </li>\n            <li>\n              <strong>Price:</strong> {getPrice(props.item.price)}\n            </li>\n            <li>\n              <strong><a href={props.item.reserve_url}>Reserve Table</a></strong>\n            </li>\n          </ul>\n    </div>\n  )\n}\n\nexport default restaurantItem;","import React from 'react';\nimport spinner from '../../img/spinner.gif'\n\nconst Spinner = () => {\n    return <img src={spinner} style={{ width: '200px', margin: 'auto', display: 'block'}} alt='Loading...' />\n}\n\nexport default Spinner;","import React from 'react';\nimport RestaurantItem from './RestaurantItem'\nimport Spinner from '../ui/Spinner'\n\nconst restaurantGrid = (props) => {\n    return props.isLoading ? \n        <Spinner />\n        : \n        <section className='cards'>\n            { props.items.map(item => (\n            <RestaurantItem key={item.id} item={item}/>\n            )) }\n        </section>\n}\n\nexport default restaurantGrid;","import React, { useState } from 'react'\n\nconst Search = (props) => {\n    const [text, setText] = useState('');\n\n    const onChange = (q) => {\n        setText(q);\n        props.getQuery(q);\n    }\n\n    return (\n        <section className='search'>\n            <form>\n                <input \n                    type='text'\n                    className='form-control'\n                    placeholder='Search: enter city name' \n                    value={text}\n                    onChange={e => onChange(e.target.value)}\n                    autoFocus />\n            </form>\n        </section>\n    )\n}\n\nexport default Search;","import React, { useState } from 'react';\n\nconst Filter = (props) => {\n    const [text, setText] = useState('');\n    \n    const onChange = (t) => {\n        setText(t);\n        props.getFilterText(t.toLowerCase());\n    }\n\n    return (\n        <section className='search'>\n            <form>\n                <input \n                    type='text'\n                    className='form-control'\n                    placeholder='enter name / street / area to refine your search' \n                    value={text}\n                    onChange={e => onChange(e.target.value)} />\n            </form>\n        </section>\n    )\n}\n\nexport default Filter;","import React from 'react';\n\nconst PagesBar = (props) => {\n    const divs = [];\n    if(props.curPage === 1) {\n        divs.push(<div key='prev'>&laquo;</div>);\n    } else {\n        divs.push(<div onClick={(e) => props.clicked(props.curPage - 1)} key='prev'>&laquo;</div>);\n    }\n    \n    for(let i=1; i<=props.totalPages; i++) {\n        let tmp;\n        if(i === props.curPage) {\n            tmp = <div key={i} onClick={(e) => props.clicked(e.target.innerHTML)} className='active'>{i}</div>\n        } else {\n            tmp = <div key={i} onClick={(e) => props.clicked(e.target.innerHTML)}>{i}</div>\n        }\n        divs.push(tmp);\n    }\n\n    if(props.curPage === props.totalPages) {\n        divs.push(<div key='next'>&raquo;</div>);\n    } else {\n        divs.push(<div onClick={(e) => props.clicked(props.curPage + 1)} key='next'>&raquo;</div>);\n    }\n    \n    return (\n        <div className='center'>\n            <div className='pagination'>\n                {divs}\n            </div>\n        </div>\n    )\n}\n\nexport default PagesBar;","import React, {useState, useEffect} from 'react';\nimport Header from './components/ui/Header';\nimport './App.css';\nimport axios from 'axios';\nimport RestaurantGrid from './components/restaurants/RestaurantGrid';\nimport Search from './components/ui/Search';\nimport Filter from './components/ui/Filter';\nimport PagesBar from './components/ui/PagesBar';\n\nconst App = () => {\n  const [data, setData] = useState({restaurants: []})\n  const [filteredData, setFilteredData] = useState({restaurants: []})\n  const [isLoading, setIsLoading] = useState(true)\n  const [query, setQuery] = useState('toronto')\n  const [filterText, setFilterText] = useState('')\n  const [pageNo, setPageNo] = useState(1);\n\n  useEffect(() => {\n    const fetchItems = async () => {\n      const result = await axios(`https://opentable.herokuapp.com/api/restaurants?city=${query}&per_page=50&page=${pageNo}`);\n      setData(result.data);\n      setFilteredData(result.data);\n      setIsLoading(false);\n    }\n\n    fetchItems();\n  }, [query, pageNo]);\n\n  useEffect(() => {\n      const restaurants = [];\n      let r = {};\n\n      for(r of data.restaurants) {\n        if(r.area.toLowerCase().indexOf(filterText) !== -1 || \n            r.name.toLowerCase().indexOf(filterText) !== -1 || \n            r.address.toLowerCase().indexOf(filterText) !== -1) {\n          restaurants.push(r);\n        }\n      }\n\n      setFilteredData({...data, restaurants: restaurants});\n  }, [data, filterText]);\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <Search getQuery={q => setQuery(q)}/>\n      <Filter getFilterText={t => setFilterText(t)}/>\n      <RestaurantGrid items={filteredData.restaurants} isLoading={isLoading}/>\n      <br />\n      <PagesBar \n        clicked={n => setPageNo(Number(n))}\n        curPage={pageNo}\n        totalPages={Math.ceil(data.total_entries / data.per_page)} />\n        <br /><br /><br />\n    </div>\n  );\n}\n\nexport default App;\n\n// ignore\n// ignore\n// ignore","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}